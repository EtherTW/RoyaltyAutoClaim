/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../common";
import type {
  RoyaltyAutoClaimProxy,
  RoyaltyAutoClaimProxyInterface,
} from "../RoyaltyAutoClaimProxy";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_implementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040526040516107b83803806107b883398181016040528101906100259190610584565b818161003782826100e860201b60201c565b50505f8273ffffffffffffffffffffffffffffffffffffffff168260405161005f9190610622565b5f60405180830381855af49150503d805f8114610097576040519150601f19603f3d011682016040523d82523d5f602084013e61009c565b606091505b50509050806100e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d790610692565b60405180910390fd5b5050506106d8565b6100f78261016c60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561015957610153828261023b60201b60201c565b50610168565b6101676102c160201b60201c565b5b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036101c757806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016101be91906106bf565b60405180910390fd5b806101f97f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6102fd60201b60201c565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff16846040516102649190610622565b5f60405180830381855af49150503d805f811461029c576040519150601f19603f3d011682016040523d82523d5f602084013e6102a1565b606091505b50915091506102b785838361030660201b60201c565b9250505092915050565b5f3411156102fb576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f819050919050565b6060826103215761031c8261039960201b60201c565b610391565b5f825114801561034757505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561038957836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161038091906106bf565b60405180910390fd5b819050610392565b5b9392505050565b5f815111156103ab5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610417826103ee565b9050919050565b6104278161040d565b8114610431575f5ffd5b50565b5f815190506104428161041e565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61049682610450565b810181811067ffffffffffffffff821117156104b5576104b4610460565b5b80604052505050565b5f6104c76103dd565b90506104d3828261048d565b919050565b5f67ffffffffffffffff8211156104f2576104f1610460565b5b6104fb82610450565b9050602081019050919050565b8281835e5f83830152505050565b5f610528610523846104d8565b6104be565b9050828152602081018484840111156105445761054361044c565b5b61054f848285610508565b509392505050565b5f82601f83011261056b5761056a610448565b5b815161057b848260208601610516565b91505092915050565b5f5f6040838503121561059a576105996103e6565b5b5f6105a785828601610434565b925050602083015167ffffffffffffffff8111156105c8576105c76103ea565b5b6105d485828601610557565b9150509250929050565b5f81519050919050565b5f81905092915050565b5f6105fc826105de565b61060681856105e8565b9350610616818560208601610508565b80840191505092915050565b5f61062d82846105f2565b915081905092915050565b5f82825260208201905092915050565b7f496e697469616c697a6174696f6e206661696c656400000000000000000000005f82015250565b5f61067c601583610638565b915061068782610648565b602082019050919050565b5f6020820190508181035f8301526106a981610670565b9050919050565b6106b98161040d565b82525050565b5f6020820190506106d25f8301846106b0565b92915050565b60d4806106e45f395ff3fe6080604052600a600c565b005b60186014601a565b6026565b565b5f60216044565b905090565b365f5f375f5f365f845af43d5f5f3e805f81146040573d5ff35b3d5ffd5b5f606e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6095565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f81905091905056fea2646970667358221220bcd7fc6a0d124d3857d9212ec79eb4b3df3028d3ee5ea949f7893c16cdbb353264736f6c634300081c0033";

type RoyaltyAutoClaimProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyAutoClaimProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyAutoClaimProxy__factory extends ContractFactory {
  constructor(...args: RoyaltyAutoClaimProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _implementation: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_implementation, _data, overrides || {});
  }
  override deploy(
    _implementation: AddressLike,
    _data: BytesLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_implementation, _data, overrides || {}) as Promise<
      RoyaltyAutoClaimProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RoyaltyAutoClaimProxy__factory {
    return super.connect(runner) as RoyaltyAutoClaimProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyAutoClaimProxyInterface {
    return new Interface(_abi) as RoyaltyAutoClaimProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyAutoClaimProxy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RoyaltyAutoClaimProxy;
  }
}
