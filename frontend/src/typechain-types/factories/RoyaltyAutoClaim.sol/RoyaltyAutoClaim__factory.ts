/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RoyaltyAutoClaim,
  RoyaltyAutoClaimInterface,
} from "../../RoyaltyAutoClaim.sol/RoyaltyAutoClaim";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_20",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_40",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_60",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_80",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SIG_VALIDATION_FAILED",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeRoyaltyToken",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyWithdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "royalty",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isReviewer",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSubmissionClaimable",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "reviewSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submissions",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRoyaltyAutoClaim.Submission",
        components: [
          {
            name: "royaltyRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "totalRoyaltyLevel",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IRoyaltyAutoClaim.SubmissionStatus",
          },
          {
            name: "reviewCount",
            type: "uint8",
            internalType: "uint8",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateReviewers",
    inputs: [
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_status",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRoyaltyRecipient",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "newRoyaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      {
        name: "oldAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyWithdraw",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReviewerStatusUpdated",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyClaimed",
    inputs: [
      {
        name: "titleHash",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "title",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyTokenChanged",
    inputs: [
      {
        name: "oldToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRegistered",
    inputs: [
      {
        name: "titleHash",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "title",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionReviewed",
    inputs: [
      {
        name: "titleHash",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
      {
        name: "title",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRevoked",
    inputs: [
      {
        name: "titleHash",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "title",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRoyaltyRecipientUpdated",
    inputs: [
      {
        name: "titleHash",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "oldRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "title",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyReviewed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyTitle",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ForbiddenPaymaster",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidArrayLength",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRoyaltyLevel",
    inputs: [
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidSignatureLength",
    inputs: [],
  },
  {
    type: "error",
    name: "NotFromEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
  {
    type: "error",
    name: "RenounceOwnershipDisabled",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SubmissionNotClaimable",
    inputs: [],
  },
  {
    type: "error",
    name: "SubmissionStatusNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UnsupportSelector",
    inputs: [
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612c8c6100f95f395f8181611e6a01528181611e9301526120170152612c8c5ff3fe6080604052600436106101d3575f3560e01c80638f41ec5a116100fd578063ceaee89f11610092578063f2fde38b11610062578063f2fde38b14610544578063f851a44014610563578063fc0c546a14610577578063fdc6258a1461058b575f5ffd5b8063ceaee89f146104c8578063d2c05f30146104e7578063e563f51814610506578063e6bfbfd814610525575f5ffd5b8063b0d691fe116100cd578063b0d691fe14610449578063c75b65331461046b578063c7e1a80c1461048a578063c9fe5fa2146104a9575f5ffd5b80638f41ec5a146103ba57806395ccea67146103ce578063a8dc0a80146103ed578063ad3cb1cc1461040c575f5ffd5b806352d1902d1161017357806380fcd8171161014357806380fcd817146103395780638ceea342146103685780638da5cb5b146103875780638f2839701461039b575f5ffd5b806352d1902d146102e95780636323c522146102fd5780636dd243eb14610311578063715018a614610325575f5ffd5b80632b21543b116101ae5780632b21543b1461025757806331f7d9641461028357806345345c8b146102c25780634f1ef286146102d6575f5ffd5b806305f4aa00146101de57806319822f7c146101ff5780632017a3ee14610231575f5ffd5b366101da57005b5f5ffd5b3480156101e9575f5ffd5b506101fd6101f83660046124a9565b6105aa565b005b34801561020a575f5ffd5b5061021e6102193660046124fd565b610896565b6040519081526020015b60405180910390f35b34801561023c575f5ffd5b50610245605081565b60405160ff9091168152602001610228565b348015610262575f5ffd5b5061027661027136600461254b565b610c86565b6040516102289190612598565b34801561028e575f5ffd5b506102aa73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610228565b3480156102cd575f5ffd5b50610245601481565b6101fd6102e436600461260e565b610d45565b3480156102f4575f5ffd5b5061021e610d64565b348015610308575f5ffd5b50610245603c81565b34801561031c575f5ffd5b50610245602881565b348015610330575f5ffd5b506101fd610d7f565b348015610344575f5ffd5b5061035861035336600461266b565b610d9b565b6040519015158152602001610228565b348015610373575f5ffd5b506101fd61038236600461266b565b610deb565b348015610392575f5ffd5b506102aa610f6d565b3480156103a6575f5ffd5b506101fd6103b53660046126b5565b610f9b565b3480156103c5575f5ffd5b5061021e600181565b3480156103d9575f5ffd5b506101fd6103e83660046126ce565b611081565b3480156103f8575f5ffd5b506101fd61040736600461254b565b6111d3565b348015610417575f5ffd5b5061043c604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102289190612724565b348015610454575f5ffd5b506f71727de22e5e9d8baf0edac6f37da0326102aa565b348015610476575f5ffd5b5061021e61048536600461254b565b6112fa565b348015610495575f5ffd5b506101fd6104a43660046126b5565b6113c0565b3480156104b4575f5ffd5b506101fd6104c336600461266b565b6114b9565b3480156104d3575f5ffd5b506101fd6104e23660046127c9565b6116a1565b3480156104f2575f5ffd5b5061035861050136600461254b565b611858565b348015610511575f5ffd5b506101fd61052036600461254b565b61189f565b348015610530575f5ffd5b506101fd61053f366004612892565b6119fa565b34801561054f575f5ffd5b506101fd61055e3660046126b5565b611c36565b34801561056e575f5ffd5b506102aa611ccb565b348015610582575f5ffd5b506102aa611cea565b348015610596575f5ffd5b506103586105a53660046126b5565b611d18565b6105b333611d18565b806105cd5750336f71727de22e5e9d8baf0edac6f37da032145b33906105fd5760405163472511eb60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b50600161060983610c86565b60400151600281111561061e5761061e612584565b1461063c57604051630f4ac8f560e31b815260040160405180910390fd5b61ffff811660141480610653575061ffff81166028145b80610662575061ffff8116603c145b80610671575061ffff81166050145b819061069757604051639eb633bd60e01b815261ffff90911660048201526024016105f4565b505f6f71727de22e5e9d8baf0edac6f37da0311933016106c0576106b9611d54565b90506106c3565b50335b6040515f516020612bf75f395f51905f52907f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90490610702908690612913565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1615610747576040516396c3b41160e01b815260040160405180910390fd5b6001816004018560405161075b9190612913565b90815260408051602092819003830181206001600160a01b0387165f90815293529120805460ff191692151592909217909155600382019061079e908690612913565b908152604051908190036020019020805460ff600160b81b909104169060176107c683612932565b91906101000a81548160ff021916908360ff160217905550508281600301856040516107f29190612913565b908152604051908190036020019020805460149061081d90849061ffff600160a01b90910416612950565b92506101000a81548161ffff021916908361ffff160217905550816001600160a01b03168460405161084f9190612913565b60405180910390207f5a64d426ce12c1ffd2010a44ae69e9ff44deedb65143bc7b49c312565c1b7d55858760405161088892919061296a565b60405180910390a350505050565b5f336f71727de22e5e9d8baf0edac6f37da032146108c7576040516306facdbd60e21b815260040160405180910390fd5b815f6108d660e0870187612986565b905011156108f7576040516331d4307360e01b815260040160405180910390fd5b610905610100860186612986565b905060551461092757604051634be6321b60e01b815260040160405180910390fd5b5f610936610100870187612986565b610944916041915f916129cf565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92018290525093945061098892505050610100880188612986565b6109969160419082906129cf565b61099f916129f6565b60601c90505f6109d3876020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b90505f6109e08285611dd3565b90505f6109f060608b018b612986565b6109fe916004915f916129cf565b610a0791612a36565b90506001600160e01b0319811663278f794360e11b1480610a3857506001600160e01b031981166308f2839760e41b145b80610a5357506001600160e01b031981166331f86a0360e21b145b80610a6e57506001600160e01b0319811663f2fde38b60e01b145b80610a8957506001600160e01b031981166395ccea6760e01b145b15610b0657610a96610f6d565b6001600160a01b0316846001600160a01b031614610ad25760405163472511eb60e11b81526001600160a01b03851660048201526024016105f4565b836001600160a01b0316826001600160a01b031614610af957600196505050505050610c6e565b5f96505050505050610c6e565b6001600160e01b0319811663ceaee89f60e01b1480610b3557506001600160e01b031981166364ff2fd160e11b145b80610b5057506001600160e01b0319811663467751a160e11b145b80610b6b57506001600160e01b03198116630151b81560e71b145b15610b7857610a96611ccb565b627d05ab60e91b6001600160e01b0319821601610c0a57610b9884611d18565b610bc05760405163472511eb60e11b81526001600160a01b03851660048201526024016105f4565b837fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005d836001600160a01b0316826001600160a01b031614610af957600196505050505050610c6e565b630353815d60e31b6001600160e01b0319821601610c4957836001600160a01b0316826001600160a01b031614610af957600196505050505050610c6e565b604051632f235c1560e21b81526001600160e01b0319821660048201526024016105f4565b8015610c7e575f385f3884335af1505b509392505050565b604080516080810182525f80825260208201819052818301819052606082015290515f516020612c175f395f51905f5290610cc2908490612913565b90815260408051918290036020908101832060808401835280546001600160a01b038116855261ffff600160a01b820416928501929092529183019060ff600160b01b909104166002811115610d1a57610d1a612584565b6002811115610d2b57610d2b612584565b81529054600160b81b900460ff1660209091015292915050565b610d4d611e5f565b610d5682611eef565b610d608282611f50565b5050565b5f610d6d61200c565b505f516020612c375f395f51905f5290565b6040516001623f026d60e01b0319815260040160405180910390fd5b5f5f516020612bf75f395f51905f5260040183604051610dbb9190612913565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1690505b92915050565b610df3611ccb565b6001600160a01b0316336001600160a01b03161480610e215750336f71727de22e5e9d8baf0edac6f37da032145b3390610e4c5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001610e5883610c86565b604001516002811115610e6d57610e6d612584565b14610e8b57604051630f4ac8f560e31b815260040160405180910390fd5b5f5f516020612bf75f395f51905f5260030183604051610eab9190612913565b908152604051908190036020019020546001600160a01b0316905081610edb5f516020612bf75f395f51905f5290565b60030184604051610eec9190612913565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905583821691831690610f29908690612913565b60405180910390207f1b1e5ed11d1c9dfaab8c821fd17241fc352691d5658be8007f0ca85e75ac716e86604051610f609190612724565b60405180910390a4505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610fa3610f6d565b6001600160a01b0316336001600160a01b03161480610fd15750336f71727de22e5e9d8baf0edac6f37da032145b3390610ffc5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b0381166110245760405163d92e233d60e01b815260040160405180910390fd5b5f516020612bf75f395f51905f5280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f905f90a35050565b611089610f6d565b6001600160a01b0316336001600160a01b031614806110b75750336f71727de22e5e9d8baf0edac6f37da032145b33906110e25760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601611170575f611111610f6d565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611158576040519150601f19603f3d011682016040523d82523d5f602084013e61115d565b606091505b505090508061116a575f5ffd5b5061118c565b61118c61117b610f6d565b6001600160a01b0384169083612055565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516111c791815260200190565b60405180910390a25050565b6111db611ccb565b6001600160a01b0316336001600160a01b031614806112095750336f71727de22e5e9d8baf0edac6f37da032145b33906112345760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b50600161124082610c86565b60400151600281111561125557611255612584565b1461127357604051630f4ac8f560e31b815260040160405180910390fd5b6040515f516020612c175f395f51905f5290611290908390612913565b90815260405190819003602001812080546001600160c01b03191690556112b8908290612913565b60405180910390207f267f98329d36bd623f4c486b18cc6657631230cdd63dc15679630850d1ace3f1826040516112ef9190612724565b60405180910390a250565b5f61130482611858565b61130f57505f919050565b5f611318611cea565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611353573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113779190612a6c565b905061138283610c86565b6060015160ff1661139482600a612b6f565b61139d85610c86565b6020015161ffff166113af9190612b7d565b6113b99190612b94565b9392505050565b6113c8610f6d565b6001600160a01b0316336001600160a01b031614806113f65750336f71727de22e5e9d8baf0edac6f37da032145b33906114215760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b0381166114495760405163d92e233d60e01b815260040160405180910390fd5b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f36de0d865403a3bb9b5d009ca166ba4f43a22869bb52275894ebac2bfb6195e7905f90a35050565b6114c1611ccb565b6001600160a01b0316336001600160a01b031614806114ef5750336f71727de22e5e9d8baf0edac6f37da032145b339061151a5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b505f82511161153c576040516352ddcdef60e11b815260040160405180910390fd5b6001600160a01b0381166115635760405163d92e233d60e01b815260040160405180910390fd5b5f61156d83610c86565b60400151600281111561158257611582612584565b146115a057604051630ea075bf60e21b815260040160405180910390fd5b6040515f516020612bf75f395f51905f529082905f516020612c175f395f51905f52906115ce908690612913565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556001906003830190611611908690612913565b908152604051908190036020019020805460ff60b01b1916600160b01b83600281111561164057611640612584565b0217905550816001600160a01b03168360405161165d9190612913565b60405180910390207f128ceb35916b1216157a01c8f0e5b5c6dad30f30d5f5df004efc26c18624c197856040516116949190612724565b60405180910390a3505050565b6116a9611ccb565b6001600160a01b0316336001600160a01b031614806116d75750336f71727de22e5e9d8baf0edac6f37da032145b33906117025760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b50805182511461172557604051634ec4810560e11b815260040160405180910390fd5b5f82511161174657604051634ec4810560e11b815260040160405180910390fd5b5f5b82518110156118535781818151811061176357611763612bb3565b602002602001015161177f5f516020612bf75f395f51905f5290565b5f016002015f85848151811061179757611797612bb3565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff0219169083151502179055508281815181106117e6576117e6612bb3565b60200260200101516001600160a01b03167f8c66e15caa52c9f118a0fceef602109627a550209e097c111b2c7a902b48674e83838151811061182a5761182a612bb3565b6020026020010151604051611843911515815260200190565b60405180910390a2600101611748565b505050565b5f600161186483610c86565b60400151600281111561187957611879612584565b1461188557505f919050565b600261189083610c86565b6060015160ff16101592915050565b3068929eee149b4bd2126854036118bd5763ab143c065f526004601cfd5b3068929eee149b4bd21268556118d281611858565b6118ef576040516342f26c6b60e11b815260040160405180910390fd5b5f6118f9826112fa565b6040519091505f516020612bf75f395f51905f52906002905f516020612c175f395f51905f529061192b908690612913565b908152604051908190036020019020805460ff60b01b1916600160b01b83600281111561195a5761195a612584565b021790555061198561196b84610c86565b5183611975611cea565b6001600160a01b03169190612055565b61198e83610c86565b5f01516001600160a01b0316836040516119a89190612913565b60405180910390207f557374271a9522e617bc6f9d3bbc1441479eec54dab9dff6430bc49087c21a5284866040516119e1929190612bc7565b60405180910390a350503868929eee149b4bd212685550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611a3e5750825b90505f826001600160401b03166001148015611a595750303b155b905081158015611a67575080155b15611a855760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611aaf57845460ff60401b1916600160401b1785555b6001600160a01b038916611ad65760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038816611afd5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038716611b245760405163d92e233d60e01b815260040160405180910390fd5b611b2d896120a7565b5f516020612bf75f395f51905f5280546001600160a01b038a81166001600160a01b03199283161783557f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a9018054918b16919092161790555f5b8751811015611be3576001825f016002015f8a8481518110611baa57611baa612bb3565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff1916911515919091179055600101611b86565b50508315611c2b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611c3e610f6d565b6001600160a01b0316336001600160a01b03161480611c6c5750336f71727de22e5e9d8baf0edac6f37da032145b3390611c975760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b038116611cbf5760405163d92e233d60e01b815260040160405180910390fd5b611cc8816120b8565b50565b5f5f516020612bf75f395f51905f525b546001600160a01b0316919050565b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a901546001600160a01b031690565b6001600160a01b03165f9081527f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a902602052604090205460ff1690565b5f336f71727de22e5e9d8baf0edac6f37da03214611d85576040516306facdbd60e21b815260040160405180910390fd5b7fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005c6001600160a01b038116611dce5760405163d92e233d60e01b815260040160405180910390fd5b905090565b5f604051825160408114611def5760418114611e105750611e4b565b604084015160ff81901c601b016020526001600160ff1b0316606052611e23565b60608401515f1a60205260408401516060525b50835f5260208301516040526020600160805f60015afa5191505f606052806040523d611e58575b638baa579f5f526004601cfd5b5092915050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611ecf57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ec3612128565b6001600160a01b031614155b15611eed5760405163703e46dd60e11b815260040160405180910390fd5b565b611ef7610f6d565b6001600160a01b0316336001600160a01b03161480611f255750336f71727de22e5e9d8baf0edac6f37da032145b3390610d605760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611faa575060408051601f3d908101601f19168201909252611fa791810190612bdf565b60015b611fd257604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105f4565b5f516020612c375f395f51905f52811461200257604051632a87526960e21b8152600481018290526024016105f4565b611853838361213c565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611eed5760405163703e46dd60e11b815260040160405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611853908490612191565b6120af612203565b611cc88161224c565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f5f516020612c375f395f51905f52611cdb565b6121458261227d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156121895761185382826122e0565b610d60612352565b5f5f60205f8451602086015f885af1806121b0576040513d5f823e3d81fd5b50505f513d915081156121c75780600114156121d4565b6001600160a01b0384163b155b156121fd57604051635274afe760e01b81526001600160a01b03851660048201526024016105f4565b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611eed57604051631afcd79f60e31b815260040160405180910390fd5b612254612203565b6001600160a01b038116611cbf57604051631e4fbdf760e01b81525f60048201526024016105f4565b806001600160a01b03163b5f036122b257604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105f4565b5f516020612c375f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b0316846040516122fc9190612913565b5f60405180830381855af49150503d805f8114612334576040519150601f19603f3d011682016040523d82523d5f602084013e612339565b606091505b5091509150612349858383612371565b95945050505050565b3415611eed5760405163b398979f60e01b815260040160405180910390fd5b60608261238657612381826123c6565b6113b9565b815115801561239d57506001600160a01b0384163b155b15611e5857604051639996b31560e01b81526001600160a01b03851660048201526024016105f4565b8051156123d65780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561242b5761242b6123ef565b604052919050565b5f5f6001600160401b0384111561244c5761244c6123ef565b50601f8301601f191660200161246181612403565b915050828152838383011115612475575f5ffd5b828260208301375f602084830101529392505050565b5f82601f83011261249a575f5ffd5b6113b983833560208501612433565b5f5f604083850312156124ba575f5ffd5b82356001600160401b038111156124cf575f5ffd5b6124db8582860161248b565b925050602083013561ffff811681146124f2575f5ffd5b809150509250929050565b5f5f5f6060848603121561250f575f5ffd5b83356001600160401b03811115612524575f5ffd5b84016101208187031215612536575f5ffd5b95602085013595506040909401359392505050565b5f6020828403121561255b575f5ffd5b81356001600160401b03811115612570575f5ffd5b61257c8482850161248b565b949350505050565b634e487b7160e01b5f52602160045260245ffd5b81516001600160a01b0316815260208083015161ffff169082015260408201516080820190600381106125d957634e487b7160e01b5f52602160045260245ffd5b8060408401525060ff606084015116606083015292915050565b80356001600160a01b0381168114612609575f5ffd5b919050565b5f5f6040838503121561261f575f5ffd5b612628836125f3565b915060208301356001600160401b03811115612642575f5ffd5b8301601f81018513612652575f5ffd5b61266185823560208401612433565b9150509250929050565b5f5f6040838503121561267c575f5ffd5b82356001600160401b03811115612691575f5ffd5b61269d8582860161248b565b9250506126ac602084016125f3565b90509250929050565b5f602082840312156126c5575f5ffd5b6113b9826125f3565b5f5f604083850312156126df575f5ffd5b6126e8836125f3565b946020939093013593505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6113b960208301846126f6565b5f6001600160401b0382111561274e5761274e6123ef565b5060051b60200190565b5f82601f830112612767575f5ffd5b813561277a61277582612736565b612403565b8082825260208201915060208360051b86010192508583111561279b575f5ffd5b602085015b838110156127bf576127b1816125f3565b8352602092830192016127a0565b5095945050505050565b5f5f604083850312156127da575f5ffd5b82356001600160401b038111156127ef575f5ffd5b6127fb85828601612758565b92505060208301356001600160401b03811115612816575f5ffd5b8301601f81018513612826575f5ffd5b803561283461277582612736565b8082825260208201915060208360051b850101925087831115612855575f5ffd5b6020840193505b828410156128845783358015158114612873575f5ffd5b82526020938401939091019061285c565b809450505050509250929050565b5f5f5f5f608085870312156128a5575f5ffd5b6128ae856125f3565b93506128bc602086016125f3565b92506128ca604086016125f3565b915060608501356001600160401b038111156128e4575f5ffd5b6128f087828801612758565b91505092959194509250565b5f81518060208401855e5f93019283525090919050565b5f6113b982846128fc565b634e487b7160e01b5f52601160045260245ffd5b5f60ff821660ff81036129475761294761291e565b60010192915050565b61ffff8181168382160190811115610de557610de561291e565b61ffff83168152604060208201525f61257c60408301846126f6565b5f5f8335601e1984360301811261299b575f5ffd5b8301803591506001600160401b038211156129b4575f5ffd5b6020019150368190038213156129c8575f5ffd5b9250929050565b5f5f858511156129dd575f5ffd5b838611156129e9575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015611e58576bffffffffffffffffffffffff1960149490940360031b84901b1690921692915050565b80356001600160e01b03198116906004841015611e58576001600160e01b031960049490940360031b84901b1690921692915050565b5f60208284031215612a7c575f5ffd5b815160ff811681146113b9575f5ffd5b6001815b6001841115612ac757808504811115612aab57612aab61291e565b6001841615612ab957908102905b60019390931c928002612a90565b935093915050565b5f82612add57506001610de5565b81612ae957505f610de5565b8160018114612aff5760028114612b0957612b25565b6001915050610de5565b60ff841115612b1a57612b1a61291e565b50506001821b610de5565b5060208310610133831016604e8410600b8410161715612b48575081810a610de5565b612b545f198484612a8c565b805f1904821115612b6757612b6761291e565b029392505050565b5f6113b960ff841683612acf565b8082028115828204841417610de557610de561291e565b5f82612bae57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b828152604060208201525f61257c60408301846126f6565b5f60208284031215612bef575f5ffd5b505191905056fe41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90041a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a903360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220f274115bc79416ee55dc547c4166bd9550f378caf2cf55ad8309452ab492317c64736f6c634300081c0033";

type RoyaltyAutoClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyAutoClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyAutoClaim__factory extends ContractFactory {
  constructor(...args: RoyaltyAutoClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoyaltyAutoClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyAutoClaim__factory {
    return super.connect(runner) as RoyaltyAutoClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyAutoClaimInterface {
    return new Interface(_abi) as RoyaltyAutoClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyAutoClaim {
    return new Contract(address, _abi, runner) as unknown as RoyaltyAutoClaim;
  }
}
