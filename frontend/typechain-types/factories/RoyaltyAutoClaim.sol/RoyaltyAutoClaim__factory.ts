/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RoyaltyAutoClaim,
  RoyaltyAutoClaimInterface,
} from "../../RoyaltyAutoClaim.sol/RoyaltyAutoClaim";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_20",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_40",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_60",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_80",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SIG_VALIDATION_FAILED",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeRoyaltyToken",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyWithdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "executeUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "royalty",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isReviewer",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSubmissionClaimable",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "reviewSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submissions",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRoyaltyAutoClaim.Submission",
        components: [
          {
            name: "royaltyRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "totalRoyaltyLevel",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IRoyaltyAutoClaim.SubmissionStatus",
          },
          {
            name: "reviewCount",
            type: "uint8",
            internalType: "uint8",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateReviewers",
    inputs: [
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_status",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRoyaltyRecipient",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "newRoyaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      {
        name: "oldAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyWithdraw",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReviewerStatusUpdated",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyClaimed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyTokenChanged",
    inputs: [
      {
        name: "oldToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRegistered",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRevoked",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRoyaltyRecipientUpdated",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "oldRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyReviewed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyTitle",
    inputs: [],
  },
  {
    type: "error",
    name: "ExecutionFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ForbiddenPaymaster",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidArrayLength",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRoyaltyLevel",
    inputs: [
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
  },
  {
    type: "error",
    name: "NotFromEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
  {
    type: "error",
    name: "RenounceOwnershipDisabled",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SubmissionNotClaimable",
    inputs: [],
  },
  {
    type: "error",
    name: "SubmissionStatusNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UnsupportSelector",
    inputs: [
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612cea6100f95f395f8181611ee501528181611f0e01526120920152612cea5ff3fe6080604052600436106101de575f3560e01c80638f41ec5a116100fd578063ceaee89f11610092578063f2fde38b11610062578063f2fde38b1461056e578063f851a4401461058d578063fc0c546a146105a1578063fdc6258a146105b5575f5ffd5b8063ceaee89f146104f2578063d2c05f3014610511578063e563f51814610530578063e6bfbfd81461054f575f5ffd5b8063b0d691fe116100cd578063b0d691fe14610473578063c75b653314610495578063c7e1a80c146104b4578063c9fe5fa2146104d3575f5ffd5b80638f41ec5a146103e457806395ccea67146103f8578063a8dc0a8014610417578063ad3cb1cc14610436575f5ffd5b80636323c522116101735780638ceea342116101435780638ceea342146103735780638da5cb5b146103925780638dd7712f146103a65780638f283970146103c5575f5ffd5b80636323c522146103085780636dd243eb1461031c578063715018a61461033057806380fcd81714610344575f5ffd5b806331f7d964116101ae57806331f7d9641461028e57806345345c8b146102cd5780634f1ef286146102e157806352d1902d146102f4575f5ffd5b806305f4aa00146101e957806319822f7c1461020a5780632017a3ee1461023c5780632b21543b14610262575f5ffd5b366101e557005b5f5ffd5b3480156101f4575f5ffd5b50610208610203366004612524565b6105d4565b005b348015610215575f5ffd5b5061022961022436600461258f565b6108bd565b6040519081526020015b60405180910390f35b348015610247575f5ffd5b50610250605081565b60405160ff9091168152602001610233565b34801561026d575f5ffd5b5061028161027c3660046125d8565b610a52565b6040516102339190612625565b348015610299575f5ffd5b506102b573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610233565b3480156102d8575f5ffd5b50610250601481565b6102086102ef36600461269b565b610b11565b3480156102ff575f5ffd5b50610229610b30565b348015610313575f5ffd5b50610250603c81565b348015610327575f5ffd5b50610250602881565b34801561033b575f5ffd5b50610208610b4b565b34801561034f575f5ffd5b5061036361035e3660046126f8565b610b67565b6040519015158152602001610233565b34801561037e575f5ffd5b5061020861038d3660046126f8565b610bb7565b34801561039d575f5ffd5b506102b5610d29565b3480156103b1575f5ffd5b506102086103c0366004612742565b610d57565b3480156103d0575f5ffd5b506102086103df366004612783565b61103d565b3480156103ef575f5ffd5b50610229600181565b348015610403575f5ffd5b5061020861041236600461279c565b611123565b348015610422575f5ffd5b506102086104313660046125d8565b611275565b348015610441575f5ffd5b50610466604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161023391906127c4565b34801561047e575f5ffd5b506f71727de22e5e9d8baf0edac6f37da0326102b5565b3480156104a0575f5ffd5b506102296104af3660046125d8565b61138c565b3480156104bf575f5ffd5b506102086104ce366004612783565b611452565b3480156104de575f5ffd5b506102086104ed3660046126f8565b61154b565b3480156104fd575f5ffd5b5061020861050c36600461288c565b611723565b34801561051c575f5ffd5b5061036361052b3660046125d8565b6118da565b34801561053b575f5ffd5b5061020861054a3660046125d8565b611921565b34801561055a575f5ffd5b50610208610569366004612955565b611a75565b348015610579575f5ffd5b50610208610588366004612783565b611cb1565b348015610598575f5ffd5b506102b5611d46565b3480156105ac575f5ffd5b506102b5611d65565b3480156105c0575f5ffd5b506103636105cf366004612783565b611d93565b6105dd33611d93565b806105f75750336f71727de22e5e9d8baf0edac6f37da032145b33906106275760405163472511eb60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b50600161063383610a52565b60400151600281111561064857610648612611565b1461066657604051630f4ac8f560e31b815260040160405180910390fd5b61ffff81166014148061067d575061ffff81166028145b8061068c575061ffff8116603c145b8061069b575061ffff81166050145b81906106c157604051639eb633bd60e01b815261ffff909116600482015260240161061e565b505f6f71727de22e5e9d8baf0edac6f37da0311933016106ea576106e3611dcf565b90506106ed565b50335b6040515f516020612c555f395f51905f52907f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a9049061072c9086906129d6565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1615610771576040516396c3b41160e01b815260040160405180910390fd5b6001816004018560405161078591906129d6565b90815260408051602092819003830181206001600160a01b0387165f90815293529120805460ff19169215159290921790915560038201906107c89086906129d6565b908152604051908190036020019020805460ff600160b81b909104169060176107f0836129f5565b91906101000a81548160ff021916908360ff1602179055505082816003018560405161081c91906129d6565b908152604051908190036020019020805460149061084790849061ffff600160a01b90910416612a13565b92506101000a81548161ffff021916908361ffff160217905550816001600160a01b03168460405161087991906129d6565b60405190819003812061ffff86168252907fab23ab3c2104ded85bc8949073782d4d63bc90302db1846aae04e8764628c72e9060200160405180910390a350505050565b5f336f71727de22e5e9d8baf0edac6f37da032146108ee576040516306facdbd60e21b815260040160405180910390fd5b815f6108fd60e0870187612a2d565b9050111561091e576040516331d4307360e01b815260040160405180910390fd5b5f61092c6060870187612a2d565b61093a916004915f91612a76565b61094391612a9d565b90506001600160e01b03198116638dd7712f60e01b1461098257604051632f235c1560e21b81526001600160e01b03198216600482015260240161061e565b602086013560401c805f6109ba886020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b90505f610a08826109cf6101008d018d612a2d565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250611e4e92505050565b9050806001600160a01b0316836001600160a01b031614610a3157600196505050505050610a3a565b5f965050505050505b8015610a4a575f385f3884335af1505b509392505050565b604080516080810182525f80825260208201819052818301819052606082015290515f516020612c755f395f51905f5290610a8e9084906129d6565b90815260408051918290036020908101832060808401835280546001600160a01b038116855261ffff600160a01b820416928501929092529183019060ff600160b01b909104166002811115610ae657610ae6612611565b6002811115610af757610af7612611565b81529054600160b81b900460ff1660209091015292915050565b610b19611eda565b610b2282611f6a565b610b2c8282611fcb565b5050565b5f610b39612087565b505f516020612c955f395f51905f5290565b6040516001623f026d60e01b0319815260040160405180910390fd5b5f5f516020612c555f395f51905f5260040183604051610b8791906129d6565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1690505b92915050565b610bbf611d46565b6001600160a01b0316336001600160a01b03161480610bed5750336f71727de22e5e9d8baf0edac6f37da032145b3390610c185760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b506001610c2483610a52565b604001516002811115610c3957610c39612611565b14610c5757604051630f4ac8f560e31b815260040160405180910390fd5b5f5f516020612c555f395f51905f5260030183604051610c7791906129d6565b908152604051908190036020019020546001600160a01b0316905081610ca75f516020612c555f395f51905f5290565b60030184604051610cb891906129d6565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905583821691831690610cf59086906129d6565b604051908190038120907f3df763b331ab23b752a08bf39476f16ab4b24f0e2fcce811739b6423d7878ec9905f90a4505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b336f71727de22e5e9d8baf0edac6f37da03214610d87576040516306facdbd60e21b815260040160405180910390fd5b365f610d966060850185612a2d565b610da4916004908290612a76565b90925090505f610db76004828486612a76565b610dc091612a9d565b9050602085013560401c806001600160e01b0319831663278f794360e11b1480610dfa57506001600160e01b031983166308f2839760e41b145b80610e1557506001600160e01b031983166331f86a0360e21b145b80610e3057506001600160e01b0319831663f2fde38b60e01b145b80610e4b57506001600160e01b031983166395ccea6760e01b145b15610e9957610e58610d29565b6001600160a01b0316816001600160a01b031614610e945760405163472511eb60e11b81526001600160a01b038216600482015260240161061e565b610fb9565b6001600160e01b0319831663ceaee89f60e01b1480610ec857506001600160e01b031983166364ff2fd160e11b145b80610ee357506001600160e01b0319831663467751a160e11b145b80610efe57506001600160e01b03198316630151b81560e71b145b15610f0b57610e58611d46565b627d05ab60e91b6001600160e01b0319841601610f7b57610f2b81611d93565b610f535760405163472511eb60e11b81526001600160a01b038216600482015260240161061e565b807fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005d610fb9565b630353815d60e31b6001600160e01b031984160115610fb957604051632f235c1560e21b81526001600160e01b03198416600482015260240161061e565b5f306001600160a01b03168686604051610fd4929190612ad3565b5f60405180830381855af49150503d805f811461100c576040519150601f19603f3d011682016040523d82523d5f602084013e611011565b606091505b505090508061103357604051632b3f6d1160e21b815260040160405180910390fd5b5050505050505050565b611045610d29565b6001600160a01b0316336001600160a01b031614806110735750336f71727de22e5e9d8baf0edac6f37da032145b339061109e5760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b506001600160a01b0381166110c65760405163d92e233d60e01b815260040160405180910390fd5b5f516020612c555f395f51905f5280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f905f90a35050565b61112b610d29565b6001600160a01b0316336001600160a01b031614806111595750336f71727de22e5e9d8baf0edac6f37da032145b33906111845760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601611212575f6111b3610d29565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f81146111fa576040519150601f19603f3d011682016040523d82523d5f602084013e6111ff565b606091505b505090508061120c575f5ffd5b5061122e565b61122e61121d610d29565b6001600160a01b03841690836120d0565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96958260405161126991815260200190565b60405180910390a25050565b61127d611d46565b6001600160a01b0316336001600160a01b031614806112ab5750336f71727de22e5e9d8baf0edac6f37da032145b33906112d65760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b5060016112e282610a52565b6040015160028111156112f7576112f7612611565b1461131557604051630f4ac8f560e31b815260040160405180910390fd5b6040515f516020612c755f395f51905f52906113329083906129d6565b90815260405190819003602001812080546001600160c01b031916905561135a9082906129d6565b604051908190038120907f03aed7e1566466e83a0de24355171defdcdf5256d7a1b468385e68b75c16a2eb905f90a250565b5f611396826118da565b6113a157505f919050565b5f6113aa611d65565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113e5573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114099190612ae2565b905061141483610a52565b6060015160ff1661142682600a612be5565b61142f85610a52565b6020015161ffff166114419190612bf3565b61144b9190612c0a565b9392505050565b61145a610d29565b6001600160a01b0316336001600160a01b031614806114885750336f71727de22e5e9d8baf0edac6f37da032145b33906114b35760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b506001600160a01b0381166114db5760405163d92e233d60e01b815260040160405180910390fd5b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f36de0d865403a3bb9b5d009ca166ba4f43a22869bb52275894ebac2bfb6195e7905f90a35050565b611553611d46565b6001600160a01b0316336001600160a01b031614806115815750336f71727de22e5e9d8baf0edac6f37da032145b33906115ac5760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b505f8251116115ce576040516352ddcdef60e11b815260040160405180910390fd5b6001600160a01b0381166115f55760405163d92e233d60e01b815260040160405180910390fd5b5f6115ff83610a52565b60400151600281111561161457611614612611565b1461163257604051630ea075bf60e21b815260040160405180910390fd5b6040515f516020612c555f395f51905f529082905f516020612c755f395f51905f52906116609086906129d6565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560019060038301906116a39086906129d6565b908152604051908190036020019020805460ff60b01b1916600160b01b8360028111156116d2576116d2612611565b0217905550816001600160a01b0316836040516116ef91906129d6565b604051908190038120907f2c24a11ab08eeb3931efabbad705f662c5c4f323f0d0c88d1ba96d3b368ad8c8905f90a3505050565b61172b611d46565b6001600160a01b0316336001600160a01b031614806117595750336f71727de22e5e9d8baf0edac6f37da032145b33906117845760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b5080518251146117a757604051634ec4810560e11b815260040160405180910390fd5b5f8251116117c857604051634ec4810560e11b815260040160405180910390fd5b5f5b82518110156118d5578181815181106117e5576117e5612c29565b60200260200101516118015f516020612c555f395f51905f5290565b5f016002015f85848151811061181957611819612c29565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff02191690831515021790555082818151811061186857611868612c29565b60200260200101516001600160a01b03167f8c66e15caa52c9f118a0fceef602109627a550209e097c111b2c7a902b48674e8383815181106118ac576118ac612c29565b60200260200101516040516118c5911515815260200190565b60405180910390a26001016117ca565b505050565b5f60016118e683610a52565b6040015160028111156118fb576118fb612611565b1461190757505f919050565b600261191283610a52565b6060015160ff16101592915050565b3068929eee149b4bd21268540361193f5763ab143c065f526004601cfd5b3068929eee149b4bd2126855611954816118da565b611971576040516342f26c6b60e11b815260040160405180910390fd5b5f61197b8261138c565b6040519091505f516020612c555f395f51905f52906002905f516020612c755f395f51905f52906119ad9086906129d6565b908152604051908190036020019020805460ff60b01b1916600160b01b8360028111156119dc576119dc612611565b0217905550611a076119ed84610a52565b51836119f7611d65565b6001600160a01b031691906120d0565b611a1083610a52565b5f01516001600160a01b031683604051611a2a91906129d6565b604051908190038120848252907fa3f674b5f695c272edaeed28d8caac79bb57cf0f3fd28eadea286248d6972e399060200160405180910390a350503868929eee149b4bd212685550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f81158015611ab95750825b90505f826001600160401b03166001148015611ad45750303b155b905081158015611ae2575080155b15611b005760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315611b2a57845460ff60401b1916600160401b1785555b6001600160a01b038916611b515760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038816611b785760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038716611b9f5760405163d92e233d60e01b815260040160405180910390fd5b611ba889612122565b5f516020612c555f395f51905f5280546001600160a01b038a81166001600160a01b03199283161783557f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a9018054918b16919092161790555f5b8751811015611c5e576001825f016002015f8a8481518110611c2557611c25612c29565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff1916911515919091179055600101611c01565b50508315611ca657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611cb9610d29565b6001600160a01b0316336001600160a01b03161480611ce75750336f71727de22e5e9d8baf0edac6f37da032145b3390611d125760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b506001600160a01b038116611d3a5760405163d92e233d60e01b815260040160405180910390fd5b611d4381612133565b50565b5f5f516020612c555f395f51905f525b546001600160a01b0316919050565b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a901546001600160a01b031690565b6001600160a01b03165f9081527f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a902602052604090205460ff1690565b5f336f71727de22e5e9d8baf0edac6f37da03214611e00576040516306facdbd60e21b815260040160405180910390fd5b7fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005c6001600160a01b038116611e495760405163d92e233d60e01b815260040160405180910390fd5b905090565b5f604051825160408114611e6a5760418114611e8b5750611ec6565b604084015160ff81901c601b016020526001600160ff1b0316606052611e9e565b60608401515f1a60205260408401516060525b50835f5260208301516040526020600160805f60015afa5191505f606052806040523d611ed3575b638baa579f5f526004601cfd5b5092915050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611f4a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611f3e6121a3565b6001600160a01b031614155b15611f685760405163703e46dd60e11b815260040160405180910390fd5b565b611f72610d29565b6001600160a01b0316336001600160a01b03161480611fa05750336f71727de22e5e9d8baf0edac6f37da032145b3390610b2c5760405163472511eb60e11b81526001600160a01b03909116600482015260240161061e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612025575060408051601f3d908101601f1916820190925261202291810190612c3d565b60015b61204d57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161061e565b5f516020612c955f395f51905f52811461207d57604051632a87526960e21b81526004810182905260240161061e565b6118d583836121b7565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611f685760405163703e46dd60e11b815260040160405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526118d590849061220c565b61212a61227e565b611d43816122c7565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f5f516020612c955f395f51905f52611d56565b6121c0826122f8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115612204576118d5828261235b565b610b2c6123cd565b5f5f60205f8451602086015f885af18061222b576040513d5f823e3d81fd5b50505f513d9150811561224257806001141561224f565b6001600160a01b0384163b155b1561227857604051635274afe760e01b81526001600160a01b038516600482015260240161061e565b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611f6857604051631afcd79f60e31b815260040160405180910390fd5b6122cf61227e565b6001600160a01b038116611d3a57604051631e4fbdf760e01b81525f600482015260240161061e565b806001600160a01b03163b5f0361232d57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161061e565b5f516020612c955f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b03168460405161237791906129d6565b5f60405180830381855af49150503d805f81146123af576040519150601f19603f3d011682016040523d82523d5f602084013e6123b4565b606091505b50915091506123c48583836123ec565b95945050505050565b3415611f685760405163b398979f60e01b815260040160405180910390fd5b606082612401576123fc82612441565b61144b565b815115801561241857506001600160a01b0384163b155b15611ed357604051639996b31560e01b81526001600160a01b038516600482015260240161061e565b8051156124515780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156124a6576124a661246a565b604052919050565b5f5f6001600160401b038411156124c7576124c761246a565b50601f8301601f19166020016124dc8161247e565b9150508281528383830111156124f0575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112612515575f5ffd5b61144b838335602085016124ae565b5f5f60408385031215612535575f5ffd5b82356001600160401b0381111561254a575f5ffd5b61255685828601612506565b925050602083013561ffff8116811461256d575f5ffd5b809150509250929050565b5f6101208284031215612589575f5ffd5b50919050565b5f5f5f606084860312156125a1575f5ffd5b83356001600160401b038111156125b6575f5ffd5b6125c286828701612578565b9660208601359650604090950135949350505050565b5f602082840312156125e8575f5ffd5b81356001600160401b038111156125fd575f5ffd5b61260984828501612506565b949350505050565b634e487b7160e01b5f52602160045260245ffd5b81516001600160a01b0316815260208083015161ffff1690820152604082015160808201906003811061266657634e487b7160e01b5f52602160045260245ffd5b8060408401525060ff606084015116606083015292915050565b80356001600160a01b0381168114612696575f5ffd5b919050565b5f5f604083850312156126ac575f5ffd5b6126b583612680565b915060208301356001600160401b038111156126cf575f5ffd5b8301601f810185136126df575f5ffd5b6126ee858235602084016124ae565b9150509250929050565b5f5f60408385031215612709575f5ffd5b82356001600160401b0381111561271e575f5ffd5b61272a85828601612506565b92505061273960208401612680565b90509250929050565b5f5f60408385031215612753575f5ffd5b82356001600160401b03811115612768575f5ffd5b61277485828601612578565b95602094909401359450505050565b5f60208284031215612793575f5ffd5b61144b82612680565b5f5f604083850312156127ad575f5ffd5b6127b683612680565b946020939093013593505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6001600160401b038211156128115761281161246a565b5060051b60200190565b5f82601f83011261282a575f5ffd5b813561283d612838826127f9565b61247e565b8082825260208201915060208360051b86010192508583111561285e575f5ffd5b602085015b838110156128825761287481612680565b835260209283019201612863565b5095945050505050565b5f5f6040838503121561289d575f5ffd5b82356001600160401b038111156128b2575f5ffd5b6128be8582860161281b565b92505060208301356001600160401b038111156128d9575f5ffd5b8301601f810185136128e9575f5ffd5b80356128f7612838826127f9565b8082825260208201915060208360051b850101925087831115612918575f5ffd5b6020840193505b828410156129475783358015158114612936575f5ffd5b82526020938401939091019061291f565b809450505050509250929050565b5f5f5f5f60808587031215612968575f5ffd5b61297185612680565b935061297f60208601612680565b925061298d60408601612680565b915060608501356001600160401b038111156129a7575f5ffd5b6129b38782880161281b565b91505092959194509250565b5f81518060208401855e5f93019283525090919050565b5f61144b82846129bf565b634e487b7160e01b5f52601160045260245ffd5b5f60ff821660ff8103612a0a57612a0a6129e1565b60010192915050565b61ffff8181168382160190811115610bb157610bb16129e1565b5f5f8335601e19843603018112612a42575f5ffd5b8301803591506001600160401b03821115612a5b575f5ffd5b602001915036819003821315612a6f575f5ffd5b9250929050565b5f5f85851115612a84575f5ffd5b83861115612a90575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015611ed3576001600160e01b031960049490940360031b84901b1690921692915050565b818382375f9101908152919050565b5f60208284031215612af2575f5ffd5b815160ff8116811461144b575f5ffd5b6001815b6001841115612b3d57808504811115612b2157612b216129e1565b6001841615612b2f57908102905b60019390931c928002612b06565b935093915050565b5f82612b5357506001610bb1565b81612b5f57505f610bb1565b8160018114612b755760028114612b7f57612b9b565b6001915050610bb1565b60ff841115612b9057612b906129e1565b50506001821b610bb1565b5060208310610133831016604e8410600b8410161715612bbe575081810a610bb1565b612bca5f198484612b02565b805f1904821115612bdd57612bdd6129e1565b029392505050565b5f61144b60ff841683612b45565b8082028115828204841417610bb157610bb16129e1565b5f82612c2457634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612c4d575f5ffd5b505191905056fe41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90041a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a903360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220356c7f9b794aaf2fd983091bb824f2a6a7c9f2acada925571475df331f32773d64736f6c634300081c0033";

type RoyaltyAutoClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyAutoClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyAutoClaim__factory extends ContractFactory {
  constructor(...args: RoyaltyAutoClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoyaltyAutoClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyAutoClaim__factory {
    return super.connect(runner) as RoyaltyAutoClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyAutoClaimInterface {
    return new Interface(_abi) as RoyaltyAutoClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyAutoClaim {
    return new Contract(address, _abi, runner) as unknown as RoyaltyAutoClaim;
  }
}
