/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RoyaltyAutoClaim,
  RoyaltyAutoClaimInterface,
} from "../../RoyaltyAutoClaim.sol/RoyaltyAutoClaim";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_20",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_40",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_60",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_80",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "SIG_VALIDATION_FAILED",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeRoyaltyToken",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyWithdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "royalty",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isReviewer",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSubmissionClaimable",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "reviewSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submissions",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRoyaltyAutoClaim.Submission",
        components: [
          {
            name: "royaltyRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "totalRoyaltyLevel",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IRoyaltyAutoClaim.SubmissionStatus",
          },
          {
            name: "reviewCount",
            type: "uint8",
            internalType: "uint8",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateReviewers",
    inputs: [
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_status",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRoyaltyRecipient",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "newRoyaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      {
        name: "oldAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyWithdraw",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReviewerStatusUpdated",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyClaimed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyTokenChanged",
    inputs: [
      {
        name: "oldToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRegistered",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRevoked",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRoyaltyRecipientUpdated",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "oldRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyReviewed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyTitle",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ForbiddenPaymaster",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidArrayLength",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRoyaltyLevel",
    inputs: [
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
  },
  {
    type: "error",
    name: "NotFromEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
  {
    type: "error",
    name: "RenounceOwnershipDisabled",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SubmissionNotClaimable",
    inputs: [],
  },
  {
    type: "error",
    name: "SubmissionStatusNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UnsupportSelector",
    inputs: [
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612ad66100f95f395f8181611d3301528181611d5c0152611ee00152612ad65ff3fe6080604052600436106101d3575f3560e01c80638f41ec5a116100fd578063ceaee89f11610092578063f2fde38b11610062578063f2fde38b14610544578063f851a44014610563578063fc0c546a14610577578063fdc6258a1461058b575f5ffd5b8063ceaee89f146104c8578063d2c05f30146104e7578063e563f51814610506578063e6bfbfd814610525575f5ffd5b8063b0d691fe116100cd578063b0d691fe14610449578063c75b65331461046b578063c7e1a80c1461048a578063c9fe5fa2146104a9575f5ffd5b80638f41ec5a146103ba57806395ccea67146103ce578063a8dc0a80146103ed578063ad3cb1cc1461040c575f5ffd5b806352d1902d1161017357806380fcd8171161014357806380fcd817146103395780638ceea342146103685780638da5cb5b146103875780638f2839701461039b575f5ffd5b806352d1902d146102e95780636323c522146102fd5780636dd243eb14610311578063715018a614610325575f5ffd5b80632b21543b116101ae5780632b21543b1461025757806331f7d9641461028357806345345c8b146102c25780634f1ef286146102d6575f5ffd5b806305f4aa00146101de57806319822f7c146101ff5780632017a3ee14610231575f5ffd5b366101da57005b5f5ffd5b3480156101e9575f5ffd5b506101fd6101f8366004612372565b6105aa565b005b34801561020a575f5ffd5b5061021e6102193660046123c6565b610893565b6040519081526020015b60405180910390f35b34801561023c575f5ffd5b50610245605081565b60405160ff9091168152602001610228565b348015610262575f5ffd5b50610276610271366004612414565b610b86565b6040516102289190612461565b34801561028e575f5ffd5b506102aa73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610228565b3480156102cd575f5ffd5b50610245601481565b6101fd6102e43660046124d7565b610c45565b3480156102f4575f5ffd5b5061021e610c64565b348015610308575f5ffd5b50610245603c81565b34801561031c575f5ffd5b50610245602881565b348015610330575f5ffd5b506101fd610c7f565b348015610344575f5ffd5b50610358610353366004612534565b610c9b565b6040519015158152602001610228565b348015610373575f5ffd5b506101fd610382366004612534565b610ceb565b348015610392575f5ffd5b506102aa610e5d565b3480156103a6575f5ffd5b506101fd6103b536600461257e565b610e8b565b3480156103c5575f5ffd5b5061021e600181565b3480156103d9575f5ffd5b506101fd6103e8366004612597565b610f71565b3480156103f8575f5ffd5b506101fd610407366004612414565b6110c3565b348015610417575f5ffd5b5061043c604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161022891906125bf565b348015610454575f5ffd5b506f71727de22e5e9d8baf0edac6f37da0326102aa565b348015610476575f5ffd5b5061021e610485366004612414565b6111da565b348015610495575f5ffd5b506101fd6104a436600461257e565b6112a0565b3480156104b4575f5ffd5b506101fd6104c3366004612534565b611399565b3480156104d3575f5ffd5b506101fd6104e2366004612687565b611571565b3480156104f2575f5ffd5b50610358610501366004612414565b611728565b348015610511575f5ffd5b506101fd610520366004612414565b61176f565b348015610530575f5ffd5b506101fd61053f366004612750565b6118c3565b34801561054f575f5ffd5b506101fd61055e36600461257e565b611aff565b34801561056e575f5ffd5b506102aa611b94565b348015610582575f5ffd5b506102aa611bb3565b348015610596575f5ffd5b506103586105a536600461257e565b611be1565b6105b333611be1565b806105cd5750336f71727de22e5e9d8baf0edac6f37da032145b33906105fd5760405163472511eb60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b50600161060983610b86565b60400151600281111561061e5761061e61244d565b1461063c57604051630f4ac8f560e31b815260040160405180910390fd5b61ffff811660141480610653575061ffff81166028145b80610662575061ffff8116603c145b80610671575061ffff81166050145b819061069757604051639eb633bd60e01b815261ffff90911660048201526024016105f4565b505f6f71727de22e5e9d8baf0edac6f37da0311933016106c0576106b9611c1d565b90506106c3565b50335b6040515f516020612a415f395f51905f52907f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a904906107029086906127d1565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1615610747576040516396c3b41160e01b815260040160405180910390fd5b6001816004018560405161075b91906127d1565b90815260408051602092819003830181206001600160a01b0387165f90815293529120805460ff191692151592909217909155600382019061079e9086906127d1565b908152604051908190036020019020805460ff600160b81b909104169060176107c6836127f0565b91906101000a81548160ff021916908360ff160217905550508281600301856040516107f291906127d1565b908152604051908190036020019020805460149061081d90849061ffff600160a01b9091041661280e565b92506101000a81548161ffff021916908361ffff160217905550816001600160a01b03168460405161084f91906127d1565b60405190819003812061ffff86168252907fab23ab3c2104ded85bc8949073782d4d63bc90302db1846aae04e8764628c72e9060200160405180910390a350505050565b5f336f71727de22e5e9d8baf0edac6f37da032146108c4576040516306facdbd60e21b815260040160405180910390fd5b815f6108d360e0870187612828565b905011156108f4576040516331d4307360e01b815260040160405180910390fd5b5f6109026060870187612828565b610910916004915f91612871565b61091991612898565b90505f61094a866020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b90505f6109988261095f6101008b018b612828565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250611c9c92505050565b90506001600160e01b0319831663278f794360e11b14806109c957506001600160e01b031983166308f2839760e41b145b806109e457506001600160e01b031983166331f86a0360e21b145b806109ff57506001600160e01b0319831663f2fde38b60e01b145b80610a1a57506001600160e01b031983166395ccea6760e01b145b15610a5657610a27610e5d565b6001600160a01b0316816001600160a01b031614610a4b5760019450505050610b6e565b5f9450505050610b6e565b6001600160e01b0319831663ceaee89f60e01b1480610a8557506001600160e01b031983166364ff2fd160e11b145b80610aa057506001600160e01b0319831663467751a160e11b145b80610abb57506001600160e01b03198316630151b81560e71b145b15610ac857610a27611b94565b627d05ab60e91b6001600160e01b0319841601610b2657610ae881611be1565b610af85760019450505050610b6e565b807fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005d5f9450505050610b6e565b630353815d60e31b6001600160e01b0319841601610b49575f9450505050610b6e565b604051632f235c1560e21b81526001600160e01b0319841660048201526024016105f4565b8015610b7e575f385f3884335af1505b509392505050565b604080516080810182525f80825260208201819052818301819052606082015290515f516020612a615f395f51905f5290610bc29084906127d1565b90815260408051918290036020908101832060808401835280546001600160a01b038116855261ffff600160a01b820416928501929092529183019060ff600160b01b909104166002811115610c1a57610c1a61244d565b6002811115610c2b57610c2b61244d565b81529054600160b81b900460ff1660209091015292915050565b610c4d611d28565b610c5682611db8565b610c608282611e19565b5050565b5f610c6d611ed5565b505f516020612a815f395f51905f5290565b6040516001623f026d60e01b0319815260040160405180910390fd5b5f5f516020612a415f395f51905f5260040183604051610cbb91906127d1565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1690505b92915050565b610cf3611b94565b6001600160a01b0316336001600160a01b03161480610d215750336f71727de22e5e9d8baf0edac6f37da032145b3390610d4c5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001610d5883610b86565b604001516002811115610d6d57610d6d61244d565b14610d8b57604051630f4ac8f560e31b815260040160405180910390fd5b5f5f516020612a415f395f51905f5260030183604051610dab91906127d1565b908152604051908190036020019020546001600160a01b0316905081610ddb5f516020612a415f395f51905f5290565b60030184604051610dec91906127d1565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905583821691831690610e299086906127d1565b604051908190038120907f3df763b331ab23b752a08bf39476f16ab4b24f0e2fcce811739b6423d7878ec9905f90a4505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610e93610e5d565b6001600160a01b0316336001600160a01b03161480610ec15750336f71727de22e5e9d8baf0edac6f37da032145b3390610eec5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b038116610f145760405163d92e233d60e01b815260040160405180910390fd5b5f516020612a415f395f51905f5280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f905f90a35050565b610f79610e5d565b6001600160a01b0316336001600160a01b03161480610fa75750336f71727de22e5e9d8baf0edac6f37da032145b3390610fd25760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601611060575f611001610e5d565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f8114611048576040519150601f19603f3d011682016040523d82523d5f602084013e61104d565b606091505b505090508061105a575f5ffd5b5061107c565b61107c61106b610e5d565b6001600160a01b0384169083611f1e565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd9695826040516110b791815260200190565b60405180910390a25050565b6110cb611b94565b6001600160a01b0316336001600160a01b031614806110f95750336f71727de22e5e9d8baf0edac6f37da032145b33906111245760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b50600161113082610b86565b6040015160028111156111455761114561244d565b1461116357604051630f4ac8f560e31b815260040160405180910390fd5b6040515f516020612a615f395f51905f52906111809083906127d1565b90815260405190819003602001812080546001600160c01b03191690556111a89082906127d1565b604051908190038120907f03aed7e1566466e83a0de24355171defdcdf5256d7a1b468385e68b75c16a2eb905f90a250565b5f6111e482611728565b6111ef57505f919050565b5f6111f8611bb3565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611233573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061125791906128ce565b905061126283610b86565b6060015160ff1661127482600a6129d1565b61127d85610b86565b6020015161ffff1661128f91906129df565b61129991906129f6565b9392505050565b6112a8610e5d565b6001600160a01b0316336001600160a01b031614806112d65750336f71727de22e5e9d8baf0edac6f37da032145b33906113015760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b0381166113295760405163d92e233d60e01b815260040160405180910390fd5b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f36de0d865403a3bb9b5d009ca166ba4f43a22869bb52275894ebac2bfb6195e7905f90a35050565b6113a1611b94565b6001600160a01b0316336001600160a01b031614806113cf5750336f71727de22e5e9d8baf0edac6f37da032145b33906113fa5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b505f82511161141c576040516352ddcdef60e11b815260040160405180910390fd5b6001600160a01b0381166114435760405163d92e233d60e01b815260040160405180910390fd5b5f61144d83610b86565b6040015160028111156114625761146261244d565b1461148057604051630ea075bf60e21b815260040160405180910390fd5b6040515f516020612a415f395f51905f529082905f516020612a615f395f51905f52906114ae9086906127d1565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915560019060038301906114f19086906127d1565b908152604051908190036020019020805460ff60b01b1916600160b01b8360028111156115205761152061244d565b0217905550816001600160a01b03168360405161153d91906127d1565b604051908190038120907f2c24a11ab08eeb3931efabbad705f662c5c4f323f0d0c88d1ba96d3b368ad8c8905f90a3505050565b611579611b94565b6001600160a01b0316336001600160a01b031614806115a75750336f71727de22e5e9d8baf0edac6f37da032145b33906115d25760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b5080518251146115f557604051634ec4810560e11b815260040160405180910390fd5b5f82511161161657604051634ec4810560e11b815260040160405180910390fd5b5f5b82518110156117235781818151811061163357611633612a15565b602002602001015161164f5f516020612a415f395f51905f5290565b5f016002015f85848151811061166757611667612a15565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff0219169083151502179055508281815181106116b6576116b6612a15565b60200260200101516001600160a01b03167f8c66e15caa52c9f118a0fceef602109627a550209e097c111b2c7a902b48674e8383815181106116fa576116fa612a15565b6020026020010151604051611713911515815260200190565b60405180910390a2600101611618565b505050565b5f600161173483610b86565b6040015160028111156117495761174961244d565b1461175557505f919050565b600261176083610b86565b6060015160ff16101592915050565b3068929eee149b4bd21268540361178d5763ab143c065f526004601cfd5b3068929eee149b4bd21268556117a281611728565b6117bf576040516342f26c6b60e11b815260040160405180910390fd5b5f6117c9826111da565b6040519091505f516020612a415f395f51905f52906002905f516020612a615f395f51905f52906117fb9086906127d1565b908152604051908190036020019020805460ff60b01b1916600160b01b83600281111561182a5761182a61244d565b021790555061185561183b84610b86565b5183611845611bb3565b6001600160a01b03169190611f1e565b61185e83610b86565b5f01516001600160a01b03168360405161187891906127d1565b604051908190038120848252907fa3f674b5f695c272edaeed28d8caac79bb57cf0f3fd28eadea286248d6972e399060200160405180910390a350503868929eee149b4bd212685550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f811580156119075750825b90505f826001600160401b031660011480156119225750303b155b905081158015611930575080155b1561194e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561197857845460ff60401b1916600160401b1785555b6001600160a01b03891661199f5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0388166119c65760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0387166119ed5760405163d92e233d60e01b815260040160405180910390fd5b6119f689611f70565b5f516020612a415f395f51905f5280546001600160a01b038a81166001600160a01b03199283161783557f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a9018054918b16919092161790555f5b8751811015611aac576001825f016002015f8a8481518110611a7357611a73612a15565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff1916911515919091179055600101611a4f565b50508315611af457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611b07610e5d565b6001600160a01b0316336001600160a01b03161480611b355750336f71727de22e5e9d8baf0edac6f37da032145b3390611b605760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b506001600160a01b038116611b885760405163d92e233d60e01b815260040160405180910390fd5b611b9181611f81565b50565b5f5f516020612a415f395f51905f525b546001600160a01b0316919050565b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a901546001600160a01b031690565b6001600160a01b03165f9081527f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a902602052604090205460ff1690565b5f336f71727de22e5e9d8baf0edac6f37da03214611c4e576040516306facdbd60e21b815260040160405180910390fd5b7fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005c6001600160a01b038116611c975760405163d92e233d60e01b815260040160405180910390fd5b905090565b5f604051825160408114611cb85760418114611cd95750611d14565b604084015160ff81901c601b016020526001600160ff1b0316606052611cec565b60608401515f1a60205260408401516060525b50835f5260208301516040526020600160805f60015afa5191505f606052806040523d611d21575b638baa579f5f526004601cfd5b5092915050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611d9857507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611d8c611ff1565b6001600160a01b031614155b15611db65760405163703e46dd60e11b815260040160405180910390fd5b565b611dc0610e5d565b6001600160a01b0316336001600160a01b03161480611dee5750336f71727de22e5e9d8baf0edac6f37da032145b3390610c605760405163472511eb60e11b81526001600160a01b0390911660048201526024016105f4565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611e73575060408051601f3d908101601f19168201909252611e7091810190612a29565b60015b611e9b57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105f4565b5f516020612a815f395f51905f528114611ecb57604051632a87526960e21b8152600481018290526024016105f4565b6117238383612005565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611db65760405163703e46dd60e11b815260040160405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261172390849061205a565b611f786120cc565b611b9181612115565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f5f516020612a815f395f51905f52611ba4565b61200e82612146565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156120525761172382826121a9565b610c6061221b565b5f5f60205f8451602086015f885af180612079576040513d5f823e3d81fd5b50505f513d9150811561209057806001141561209d565b6001600160a01b0384163b155b156120c657604051635274afe760e01b81526001600160a01b03851660048201526024016105f4565b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611db657604051631afcd79f60e31b815260040160405180910390fd5b61211d6120cc565b6001600160a01b038116611b8857604051631e4fbdf760e01b81525f60048201526024016105f4565b806001600160a01b03163b5f0361217b57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105f4565b5f516020612a815f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b0316846040516121c591906127d1565b5f60405180830381855af49150503d805f81146121fd576040519150601f19603f3d011682016040523d82523d5f602084013e612202565b606091505b509150915061221285838361223a565b95945050505050565b3415611db65760405163b398979f60e01b815260040160405180910390fd5b60608261224f5761224a8261228f565b611299565b815115801561226657506001600160a01b0384163b155b15611d2157604051639996b31560e01b81526001600160a01b03851660048201526024016105f4565b80511561229f5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156122f4576122f46122b8565b604052919050565b5f5f6001600160401b03841115612315576123156122b8565b50601f8301601f191660200161232a816122cc565b91505082815283838301111561233e575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112612363575f5ffd5b611299838335602085016122fc565b5f5f60408385031215612383575f5ffd5b82356001600160401b03811115612398575f5ffd5b6123a485828601612354565b925050602083013561ffff811681146123bb575f5ffd5b809150509250929050565b5f5f5f606084860312156123d8575f5ffd5b83356001600160401b038111156123ed575f5ffd5b840161012081870312156123ff575f5ffd5b95602085013595506040909401359392505050565b5f60208284031215612424575f5ffd5b81356001600160401b03811115612439575f5ffd5b61244584828501612354565b949350505050565b634e487b7160e01b5f52602160045260245ffd5b81516001600160a01b0316815260208083015161ffff169082015260408201516080820190600381106124a257634e487b7160e01b5f52602160045260245ffd5b8060408401525060ff606084015116606083015292915050565b80356001600160a01b03811681146124d2575f5ffd5b919050565b5f5f604083850312156124e8575f5ffd5b6124f1836124bc565b915060208301356001600160401b0381111561250b575f5ffd5b8301601f8101851361251b575f5ffd5b61252a858235602084016122fc565b9150509250929050565b5f5f60408385031215612545575f5ffd5b82356001600160401b0381111561255a575f5ffd5b61256685828601612354565b925050612575602084016124bc565b90509250929050565b5f6020828403121561258e575f5ffd5b611299826124bc565b5f5f604083850312156125a8575f5ffd5b6125b1836124bc565b946020939093013593505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6001600160401b0382111561260c5761260c6122b8565b5060051b60200190565b5f82601f830112612625575f5ffd5b8135612638612633826125f4565b6122cc565b8082825260208201915060208360051b860101925085831115612659575f5ffd5b602085015b8381101561267d5761266f816124bc565b83526020928301920161265e565b5095945050505050565b5f5f60408385031215612698575f5ffd5b82356001600160401b038111156126ad575f5ffd5b6126b985828601612616565b92505060208301356001600160401b038111156126d4575f5ffd5b8301601f810185136126e4575f5ffd5b80356126f2612633826125f4565b8082825260208201915060208360051b850101925087831115612713575f5ffd5b6020840193505b828410156127425783358015158114612731575f5ffd5b82526020938401939091019061271a565b809450505050509250929050565b5f5f5f5f60808587031215612763575f5ffd5b61276c856124bc565b935061277a602086016124bc565b9250612788604086016124bc565b915060608501356001600160401b038111156127a2575f5ffd5b6127ae87828801612616565b91505092959194509250565b5f81518060208401855e5f93019283525090919050565b5f61129982846127ba565b634e487b7160e01b5f52601160045260245ffd5b5f60ff821660ff8103612805576128056127dc565b60010192915050565b61ffff8181168382160190811115610ce557610ce56127dc565b5f5f8335601e1984360301811261283d575f5ffd5b8301803591506001600160401b03821115612856575f5ffd5b60200191503681900382131561286a575f5ffd5b9250929050565b5f5f8585111561287f575f5ffd5b8386111561288b575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015611d21576001600160e01b031960049490940360031b84901b1690921692915050565b5f602082840312156128de575f5ffd5b815160ff81168114611299575f5ffd5b6001815b60018411156129295780850481111561290d5761290d6127dc565b600184161561291b57908102905b60019390931c9280026128f2565b935093915050565b5f8261293f57506001610ce5565b8161294b57505f610ce5565b8160018114612961576002811461296b57612987565b6001915050610ce5565b60ff84111561297c5761297c6127dc565b50506001821b610ce5565b5060208310610133831016604e8410600b84101617156129aa575081810a610ce5565b6129b65f1984846128ee565b805f19048211156129c9576129c96127dc565b029392505050565b5f61129960ff841683612931565b8082028115828204841417610ce557610ce56127dc565b5f82612a1057634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612a39575f5ffd5b505191905056fe41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90041a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a903360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212205397c73b65fc529205e904db7e73c96de4ab179ae55b7482bd1b41c6bbdd914f64736f6c634300081c0033";

type RoyaltyAutoClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyAutoClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyAutoClaim__factory extends ContractFactory {
  constructor(...args: RoyaltyAutoClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoyaltyAutoClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyAutoClaim__factory {
    return super.connect(runner) as RoyaltyAutoClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyAutoClaimInterface {
    return new Interface(_abi) as RoyaltyAutoClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyAutoClaim {
    return new Contract(address, _abi, runner) as unknown as RoyaltyAutoClaim;
  }
}
