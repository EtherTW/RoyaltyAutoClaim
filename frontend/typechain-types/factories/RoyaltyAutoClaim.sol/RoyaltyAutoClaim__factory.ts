/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RoyaltyAutoClaim,
  RoyaltyAutoClaimInterface,
} from "../../RoyaltyAutoClaim.sol/RoyaltyAutoClaim";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "NATIVE_TOKEN",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_20",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_40",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_60",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ROYALTY_LEVEL_80",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "admin",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "changeAdmin",
    inputs: [
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "changeRoyaltyToken",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "emergencyWithdraw",
    inputs: [
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getRoyalty",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "royalty",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "hasReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "_admin",
        type: "address",
        internalType: "address",
      },
      {
        name: "_token",
        type: "address",
        internalType: "address",
      },
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isReviewer",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isSubmissionClaimable",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "reviewSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "revokeSubmission",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "submissions",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRoyaltyAutoClaim.Submission",
        components: [
          {
            name: "royaltyRecipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "totalRoyaltyLevel",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "status",
            type: "uint8",
            internalType: "enum IRoyaltyAutoClaim.SubmissionStatus",
          },
          {
            name: "reviewCount",
            type: "uint8",
            internalType: "uint8",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "token",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateReviewers",
    inputs: [
      {
        name: "_reviewers",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "_status",
        type: "bool[]",
        internalType: "bool[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateRoyaltyRecipient",
    inputs: [
      {
        name: "title",
        type: "string",
        internalType: "string",
      },
      {
        name: "newRoyaltyRecipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "validateUserOp",
    inputs: [
      {
        name: "userOp",
        type: "tuple",
        internalType: "struct PackedUserOperation",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "nonce",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "initCode",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "callData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "accountGasLimits",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "preVerificationGas",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "gasFees",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "paymasterAndData",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "signature",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
      {
        name: "userOpHash",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "missingAccountFunds",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "validationData",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "AdminChanged",
    inputs: [
      {
        name: "oldAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newAdmin",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EmergencyWithdraw",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReviewerStatusUpdated",
    inputs: [
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "status",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyClaimed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RoyaltyTokenChanged",
    inputs: [
      {
        name: "oldToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newToken",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRegistered",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "royaltyRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionReviewed",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "reviewer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "royaltyLevel",
        type: "uint16",
        indexed: false,
        internalType: "uint16",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRevoked",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubmissionRoyaltyRecipientUpdated",
    inputs: [
      {
        name: "title",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "oldRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newRecipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "AlreadyReviewed",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "EmptyTitle",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ForbiddenPaymaster",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidArrayLength",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRoyaltyLevel",
    inputs: [
      {
        name: "royaltyLevel",
        type: "uint16",
        internalType: "uint16",
      },
    ],
  },
  {
    type: "error",
    name: "NotFromEntryPoint",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
  {
    type: "error",
    name: "RenounceOwnershipDisabled",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "SubmissionNotClaimable",
    inputs: [],
  },
  {
    type: "error",
    name: "SubmissionStatusNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UnsupportSelector",
    inputs: [
      {
        name: "selector",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015610013575f5ffd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612b656100f95f395f8181611d7f01528181611e670152611e900152612b655ff3fe6080604052600436106101c5575f3560e01c806395ccea67116100f2578063ceaee89f11610092578063f2fde38b11610062578063f2fde38b1461051b578063f851a4401461053a578063fc0c546a1461054e578063fdc6258a14610562575f5ffd5b8063ceaee89f1461049f578063d2c05f30146104be578063e563f518146104dd578063e6bfbfd8146104fc575f5ffd5b8063b0d691fe116100cd578063b0d691fe14610420578063c75b653314610442578063c7e1a80c14610461578063c9fe5fa214610480575f5ffd5b806395ccea67146103a5578063a8dc0a80146103c4578063ad3cb1cc146103e3575f5ffd5b806352d1902d1161016857806380fcd8171161013857806380fcd817146103245780638ceea342146103535780638da5cb5b146103725780638f28397014610386575f5ffd5b806352d1902d146102d45780636323c522146102e85780636dd243eb146102fc578063715018a614610310575f5ffd5b80632b21543b116101a35780632b21543b1461024257806331f7d9641461026e57806345345c8b146102ad5780634f1ef286146102c1575f5ffd5b806305f4aa00146101c957806319822f7c146101ea5780632017a3ee1461021c575b5f5ffd5b3480156101d4575f5ffd5b506101e86101e3366004612401565b610581565b005b3480156101f5575f5ffd5b50610209610204366004612455565b61086a565b6040519081526020015b60405180910390f35b348015610227575f5ffd5b50610230605081565b60405160ff9091168152602001610213565b34801561024d575f5ffd5b5061026161025c3660046124a3565b610b8d565b60405161021391906124f0565b348015610279575f5ffd5b5061029573eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610213565b3480156102b8575f5ffd5b50610230601481565b6101e86102cf366004612566565b610c4c565b3480156102df575f5ffd5b50610209610cbc565b3480156102f3575f5ffd5b50610230603c81565b348015610307575f5ffd5b50610230602881565b34801561031b575f5ffd5b506101e8610cd7565b34801561032f575f5ffd5b5061034361033e3660046125c3565b610cf3565b6040519015158152602001610213565b34801561035e575f5ffd5b506101e861036d3660046125c3565b610d43565b34801561037d575f5ffd5b50610295610eb5565b348015610391575f5ffd5b506101e86103a036600461260d565b610ee3565b3480156103b0575f5ffd5b506101e86103bf366004612626565b610fc9565b3480156103cf575f5ffd5b506101e86103de3660046124a3565b61111b565b3480156103ee575f5ffd5b50610413604051806040016040528060058152602001640352e302e360dc1b81525081565b604051610213919061264e565b34801561042b575f5ffd5b506f71727de22e5e9d8baf0edac6f37da032610295565b34801561044d575f5ffd5b5061020961045c3660046124a3565b611232565b34801561046c575f5ffd5b506101e861047b36600461260d565b6112f8565b34801561048b575f5ffd5b506101e861049a3660046125c3565b6113f1565b3480156104aa575f5ffd5b506101e86104b9366004612716565b6115c9565b3480156104c9575f5ffd5b506103436104d83660046124a3565b611780565b3480156104e8575f5ffd5b506101e86104f73660046124a3565b6117c7565b348015610507575f5ffd5b506101e86105163660046127df565b61191b565b348015610526575f5ffd5b506101e861053536600461260d565b611b57565b348015610545575f5ffd5b50610295611bc5565b348015610559575f5ffd5b50610295611be4565b34801561056d575f5ffd5b5061034361057c36600461260d565b611c12565b61058a33611c12565b806105a45750336f71727de22e5e9d8baf0edac6f37da032145b33906105d45760405163472511eb60e11b81526001600160a01b0390911660048201526024015b60405180910390fd5b5060016105e083610b8d565b6040015160028111156105f5576105f56124dc565b1461061357604051630f4ac8f560e31b815260040160405180910390fd5b61ffff81166014148061062a575061ffff81166028145b80610639575061ffff8116603c145b80610648575061ffff81166050145b819061066e57604051639eb633bd60e01b815261ffff90911660048201526024016105cb565b505f6f71727de22e5e9d8baf0edac6f37da03119330161069757610690611c4e565b905061069a565b50335b6040515f516020612ad05f395f51905f52907f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a904906106d9908690612860565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff161561071e576040516396c3b41160e01b815260040160405180910390fd5b600181600401856040516107329190612860565b90815260408051602092819003830181206001600160a01b0387165f90815293529120805460ff1916921515929092179091556003820190610775908690612860565b908152604051908190036020019020805460ff600160b81b9091041690601761079d8361287f565b91906101000a81548160ff021916908360ff160217905550508281600301856040516107c99190612860565b90815260405190819003602001902080546014906107f490849061ffff600160a01b9091041661289d565b92506101000a81548161ffff021916908361ffff160217905550816001600160a01b0316846040516108269190612860565b60405190819003812061ffff86168252907fab23ab3c2104ded85bc8949073782d4d63bc90302db1846aae04e8764628c72e9060200160405180910390a350505050565b5f336f71727de22e5e9d8baf0edac6f37da0321461089b576040516306facdbd60e21b815260040160405180910390fd5b815f6108aa60e08701876128b7565b905011156108cb576040516331d4307360e01b815260040160405180910390fd5b5f6108d960608701876128b7565b6108e7916004915f91612900565b6108f091612927565b90505f610921866020527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c60042090565b90505f61096f826109366101008b018b6128b7565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250611ccd92505050565b90506001600160e01b0319831663278f794360e11b14806109a057506001600160e01b031983166308f2839760e41b145b806109bb57506001600160e01b031983166331f86a0360e21b145b806109d657506001600160e01b0319831663f2fde38b60e01b145b806109f157506001600160e01b031983166395ccea6760e01b145b15610a45576109fe610eb5565b6001600160a01b0316816001600160a01b031614610a3a5760405163472511eb60e11b81526001600160a01b03821660048201526024016105cb565b5f9450505050610b75565b6001600160e01b0319831663ceaee89f60e01b1480610a7457506001600160e01b031983166364ff2fd160e11b145b80610a8f57506001600160e01b0319831663467751a160e11b145b80610aaa57506001600160e01b03198316630151b81560e71b145b15610ab7576109fe611bc5565b627d05ab60e91b6001600160e01b0319841601610b2d57610ad781611c12565b610aff5760405163472511eb60e11b81526001600160a01b03821660048201526024016105cb565b807fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005d5f9450505050610b75565b630353815d60e31b6001600160e01b0319841601610b50575f9450505050610b75565b604051632f235c1560e21b81526001600160e01b0319841660048201526024016105cb565b8015610b85575f385f3884335af1505b509392505050565b604080516080810182525f80825260208201819052818301819052606082015290515f516020612af05f395f51905f5290610bc9908490612860565b90815260408051918290036020908101832060808401835280546001600160a01b038116855261ffff600160a01b820416928501929092529183019060ff600160b01b909104166002811115610c2157610c216124dc565b6002811115610c3257610c326124dc565b81529054600160b81b900460ff1660209091015292915050565b610c54610eb5565b6001600160a01b0316336001600160a01b03161480610c825750336f71727de22e5e9d8baf0edac6f37da032145b3390610cad5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b50610cb88282611d59565b5050565b5f610cc5611d74565b505f516020612b105f395f51905f5290565b6040516001623f026d60e01b0319815260040160405180910390fd5b5f5f516020612ad05f395f51905f5260040183604051610d139190612860565b90815260408051602092819003830190206001600160a01b0385165f908152925290205460ff1690505b92915050565b610d4b611bc5565b6001600160a01b0316336001600160a01b03161480610d795750336f71727de22e5e9d8baf0edac6f37da032145b3390610da45760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b506001610db083610b8d565b604001516002811115610dc557610dc56124dc565b14610de357604051630f4ac8f560e31b815260040160405180910390fd5b5f5f516020612ad05f395f51905f5260030183604051610e039190612860565b908152604051908190036020019020546001600160a01b0316905081610e335f516020612ad05f395f51905f5290565b60030184604051610e449190612860565b90815260405190819003602001812080546001600160a01b039384166001600160a01b031990911617905583821691831690610e81908690612860565b604051908190038120907f3df763b331ab23b752a08bf39476f16ab4b24f0e2fcce811739b6423d7878ec9905f90a4505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b610eeb610eb5565b6001600160a01b0316336001600160a01b03161480610f195750336f71727de22e5e9d8baf0edac6f37da032145b3390610f445760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b506001600160a01b038116610f6c5760405163d92e233d60e01b815260040160405180910390fd5b5f516020612ad05f395f51905f5280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f905f90a35050565b610fd1610eb5565b6001600160a01b0316336001600160a01b03161480610fff5750336f71727de22e5e9d8baf0edac6f37da032145b339061102a5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b5073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038316016110b8575f611059610eb5565b6001600160a01b0316826040515f6040518083038185875af1925050503d805f81146110a0576040519150601f19603f3d011682016040523d82523d5f602084013e6110a5565b606091505b50509050806110b2575f5ffd5b506110d4565b6110d46110c3610eb5565b6001600160a01b0384169083611dbf565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96958260405161110f91815260200190565b60405180910390a25050565b611123611bc5565b6001600160a01b0316336001600160a01b031614806111515750336f71727de22e5e9d8baf0edac6f37da032145b339061117c5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b50600161118882610b8d565b60400151600281111561119d5761119d6124dc565b146111bb57604051630f4ac8f560e31b815260040160405180910390fd5b6040515f516020612af05f395f51905f52906111d8908390612860565b90815260405190819003602001812080546001600160c01b0319169055611200908290612860565b604051908190038120907f03aed7e1566466e83a0de24355171defdcdf5256d7a1b468385e68b75c16a2eb905f90a250565b5f61123c82611780565b61124757505f919050565b5f611250611be4565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561128b573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112af919061295d565b90506112ba83610b8d565b6060015160ff166112cc82600a612a60565b6112d585610b8d565b6020015161ffff166112e79190612a6e565b6112f19190612a85565b9392505050565b611300610eb5565b6001600160a01b0316336001600160a01b0316148061132e5750336f71727de22e5e9d8baf0edac6f37da032145b33906113595760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b506001600160a01b0381166113815760405163d92e233d60e01b815260040160405180910390fd5b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f36de0d865403a3bb9b5d009ca166ba4f43a22869bb52275894ebac2bfb6195e7905f90a35050565b6113f9611bc5565b6001600160a01b0316336001600160a01b031614806114275750336f71727de22e5e9d8baf0edac6f37da032145b33906114525760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b505f825111611474576040516352ddcdef60e11b815260040160405180910390fd5b6001600160a01b03811661149b5760405163d92e233d60e01b815260040160405180910390fd5b5f6114a583610b8d565b6040015160028111156114ba576114ba6124dc565b146114d857604051630ea075bf60e21b815260040160405180910390fd5b6040515f516020612ad05f395f51905f529082905f516020612af05f395f51905f5290611506908690612860565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556001906003830190611549908690612860565b908152604051908190036020019020805460ff60b01b1916600160b01b836002811115611578576115786124dc565b0217905550816001600160a01b0316836040516115959190612860565b604051908190038120907f2c24a11ab08eeb3931efabbad705f662c5c4f323f0d0c88d1ba96d3b368ad8c8905f90a3505050565b6115d1611bc5565b6001600160a01b0316336001600160a01b031614806115ff5750336f71727de22e5e9d8baf0edac6f37da032145b339061162a5760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b50805182511461164d57604051634ec4810560e11b815260040160405180910390fd5b5f82511161166e57604051634ec4810560e11b815260040160405180910390fd5b5f5b825181101561177b5781818151811061168b5761168b612aa4565b60200260200101516116a75f516020612ad05f395f51905f5290565b5f016002015f8584815181106116bf576116bf612aa4565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff02191690831515021790555082818151811061170e5761170e612aa4565b60200260200101516001600160a01b03167f8c66e15caa52c9f118a0fceef602109627a550209e097c111b2c7a902b48674e83838151811061175257611752612aa4565b602002602001015160405161176b911515815260200190565b60405180910390a2600101611670565b505050565b5f600161178c83610b8d565b6040015160028111156117a1576117a16124dc565b146117ad57505f919050565b60026117b883610b8d565b6060015160ff16101592915050565b3068929eee149b4bd2126854036117e55763ab143c065f526004601cfd5b3068929eee149b4bd21268556117fa81611780565b611817576040516342f26c6b60e11b815260040160405180910390fd5b5f61182182611232565b6040519091505f516020612ad05f395f51905f52906002905f516020612af05f395f51905f5290611853908690612860565b908152604051908190036020019020805460ff60b01b1916600160b01b836002811115611882576118826124dc565b02179055506118ad61189384610b8d565b518361189d611be4565b6001600160a01b03169190611dbf565b6118b683610b8d565b5f01516001600160a01b0316836040516118d09190612860565b604051908190038120848252907fa3f674b5f695c272edaeed28d8caac79bb57cf0f3fd28eadea286248d6972e399060200160405180910390a350503868929eee149b4bd212685550565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03165f8115801561195f5750825b90505f826001600160401b0316600114801561197a5750303b155b905081158015611988575080155b156119a65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156119d057845460ff60401b1916600160401b1785555b6001600160a01b0389166119f75760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038816611a1e5760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b038716611a455760405163d92e233d60e01b815260040160405180910390fd5b611a4e89611e11565b5f516020612ad05f395f51905f5280546001600160a01b038a81166001600160a01b03199283161783557f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a9018054918b16919092161790555f5b8751811015611b04576001825f016002015f8a8481518110611acb57611acb612aa4565b6020908102919091018101516001600160a01b031682528101919091526040015f20805460ff1916911515919091179055600101611aa7565b50508315611b4c57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b611b5f610eb5565b6001600160a01b0316336001600160a01b03161480611b8d5750336f71727de22e5e9d8baf0edac6f37da032145b3390611bb85760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b50611bc281611e22565b50565b5f5f516020612ad05f395f51905f525b546001600160a01b0316919050565b7f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a901546001600160a01b031690565b6001600160a01b03165f9081527f41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a902602052604090205460ff1690565b5f336f71727de22e5e9d8baf0edac6f37da03214611c7f576040516306facdbd60e21b815260040160405180910390fd5b7fbbc49793e8d16b6166d591f0a7a95f88efe9e6a08bf1603701d7f0fe05d7d6005c6001600160a01b038116611cc85760405163d92e233d60e01b815260040160405180910390fd5b905090565b5f604051825160408114611ce95760418114611d0a5750611d45565b604084015160ff81901c601b016020526001600160ff1b0316606052611d1d565b60608401515f1a60205260408401516060525b50835f5260208301516040526020600160805f60015afa5191505f606052806040523d611d52575b638baa579f5f526004601cfd5b5092915050565b611d61611e5c565b611d6a82611eea565b610cb88282611f4b565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611dbd5760405163703e46dd60e11b815260040160405180910390fd5b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261177b908490612007565b611e19612079565b611bc2816120c2565b611e2a6120ca565b6001600160a01b038116611e5357604051631e4fbdf760e01b81525f60048201526024016105cb565b611bc2816120fc565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611ecc57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611ec061216c565b6001600160a01b031614155b15611dbd5760405163703e46dd60e11b815260040160405180910390fd5b611ef2610eb5565b6001600160a01b0316336001600160a01b03161480611f205750336f71727de22e5e9d8baf0edac6f37da032145b3390610cb85760405163472511eb60e11b81526001600160a01b0390911660048201526024016105cb565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611fa5575060408051601f3d908101601f19168201909252611fa291810190612ab8565b60015b611fcd57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105cb565b5f516020612b105f395f51905f528114611ffd57604051632a87526960e21b8152600481018290526024016105cb565b61177b8383612180565b5f5f60205f8451602086015f885af180612026576040513d5f823e3d81fd5b50505f513d9150811561203d57806001141561204a565b6001600160a01b0384163b155b1561207357604051635274afe760e01b81526001600160a01b03851660048201526024016105cb565b50505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16611dbd57604051631afcd79f60e31b815260040160405180910390fd5b611e2a612079565b336120d3610eb5565b6001600160a01b031614611dbd5760405163118cdaa760e01b81523360048201526024016105cb565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f5f516020612b105f395f51905f52611bd5565b612189826121d5565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156121cd5761177b8282612238565b610cb86122aa565b806001600160a01b03163b5f0361220a57604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105cb565b5f516020612b105f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f5f846001600160a01b0316846040516122549190612860565b5f60405180830381855af49150503d805f811461228c576040519150601f19603f3d011682016040523d82523d5f602084013e612291565b606091505b50915091506122a18583836122c9565b95945050505050565b3415611dbd5760405163b398979f60e01b815260040160405180910390fd5b6060826122de576122d98261231e565b6112f1565b81511580156122f557506001600160a01b0384163b155b15611d5257604051639996b31560e01b81526001600160a01b03851660048201526024016105cb565b80511561232e5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b038111828210171561238357612383612347565b604052919050565b5f5f6001600160401b038411156123a4576123a4612347565b50601f8301601f19166020016123b98161235b565b9150508281528383830111156123cd575f5ffd5b828260208301375f602084830101529392505050565b5f82601f8301126123f2575f5ffd5b6112f18383356020850161238b565b5f5f60408385031215612412575f5ffd5b82356001600160401b03811115612427575f5ffd5b612433858286016123e3565b925050602083013561ffff8116811461244a575f5ffd5b809150509250929050565b5f5f5f60608486031215612467575f5ffd5b83356001600160401b0381111561247c575f5ffd5b8401610120818703121561248e575f5ffd5b95602085013595506040909401359392505050565b5f602082840312156124b3575f5ffd5b81356001600160401b038111156124c8575f5ffd5b6124d4848285016123e3565b949350505050565b634e487b7160e01b5f52602160045260245ffd5b81516001600160a01b0316815260208083015161ffff1690820152604082015160808201906003811061253157634e487b7160e01b5f52602160045260245ffd5b8060408401525060ff606084015116606083015292915050565b80356001600160a01b0381168114612561575f5ffd5b919050565b5f5f60408385031215612577575f5ffd5b6125808361254b565b915060208301356001600160401b0381111561259a575f5ffd5b8301601f810185136125aa575f5ffd5b6125b98582356020840161238b565b9150509250929050565b5f5f604083850312156125d4575f5ffd5b82356001600160401b038111156125e9575f5ffd5b6125f5858286016123e3565b9250506126046020840161254b565b90509250929050565b5f6020828403121561261d575f5ffd5b6112f18261254b565b5f5f60408385031215612637575f5ffd5b6126408361254b565b946020939093013593505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f6001600160401b0382111561269b5761269b612347565b5060051b60200190565b5f82601f8301126126b4575f5ffd5b81356126c76126c282612683565b61235b565b8082825260208201915060208360051b8601019250858311156126e8575f5ffd5b602085015b8381101561270c576126fe8161254b565b8352602092830192016126ed565b5095945050505050565b5f5f60408385031215612727575f5ffd5b82356001600160401b0381111561273c575f5ffd5b612748858286016126a5565b92505060208301356001600160401b03811115612763575f5ffd5b8301601f81018513612773575f5ffd5b80356127816126c282612683565b8082825260208201915060208360051b8501019250878311156127a2575f5ffd5b6020840193505b828410156127d157833580151581146127c0575f5ffd5b8252602093840193909101906127a9565b809450505050509250929050565b5f5f5f5f608085870312156127f2575f5ffd5b6127fb8561254b565b93506128096020860161254b565b92506128176040860161254b565b915060608501356001600160401b03811115612831575f5ffd5b61283d878288016126a5565b91505092959194509250565b5f81518060208401855e5f93019283525090919050565b5f6112f18284612849565b634e487b7160e01b5f52601160045260245ffd5b5f60ff821660ff81036128945761289461286b565b60010192915050565b61ffff8181168382160190811115610d3d57610d3d61286b565b5f5f8335601e198436030181126128cc575f5ffd5b8301803591506001600160401b038211156128e5575f5ffd5b6020019150368190038213156128f9575f5ffd5b9250929050565b5f5f8585111561290e575f5ffd5b8386111561291a575f5ffd5b5050820193919092039150565b80356001600160e01b03198116906004841015611d52576001600160e01b031960049490940360031b84901b1690921692915050565b5f6020828403121561296d575f5ffd5b815160ff811681146112f1575f5ffd5b6001815b60018411156129b85780850481111561299c5761299c61286b565b60018416156129aa57908102905b60019390931c928002612981565b935093915050565b5f826129ce57506001610d3d565b816129da57505f610d3d565b81600181146129f057600281146129fa57612a16565b6001915050610d3d565b60ff841115612a0b57612a0b61286b565b50506001821b610d3d565b5060208310610133831016604e8410600b8410161715612a39575081810a610d3d565b612a455f19848461297d565b805f1904821115612a5857612a5861286b565b029392505050565b5f6112f160ff8416836129c0565b8082028115828204841417610d3d57610d3d61286b565b5f82612a9f57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612ac8575f5ffd5b505191905056fe41a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a90041a2efc794119f946ab405955f96dacdfa298d25a3ae81c9a8cc1dea5771a903360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220e1badd05d1e34dbc625cbf75472983d809b7b19a9937a4b68d0a5209389b58d864736f6c634300081c0033";

type RoyaltyAutoClaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoyaltyAutoClaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoyaltyAutoClaim__factory extends ContractFactory {
  constructor(...args: RoyaltyAutoClaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RoyaltyAutoClaim & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RoyaltyAutoClaim__factory {
    return super.connect(runner) as RoyaltyAutoClaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyAutoClaimInterface {
    return new Interface(_abi) as RoyaltyAutoClaimInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RoyaltyAutoClaim {
    return new Contract(address, _abi, runner) as unknown as RoyaltyAutoClaim;
  }
}
